services:

  vault:
    container_name: vault
    build:
      context: ./docker/vault
      target: vault
      dockerfile: ./Dockerfile
    restart: on-failure
    environment:
      SSL_MODE: ${SSL_MODE:-no} # no, yes
      TZ: ${TIME_ZONE:-Africa/Douala}
    volumes:
      - vault-data:/vault/data
    ports:
      - ${VAULT_EXPOSE_PORT:-18200}:8200
    networks:
      - internal-network

  redis:
    container_name: redis
    image: redis:alpine
    restart: always
    environment:
      SSL_MODE: ${SSL_MODE:-"no"} # no, yes
      REDIS_PASSWORD: ${REDIS_PASSWORD:-""}
      REDIS_SAVE: ${REDIS_SAVE_IN_SECONDS:-3600}
    ports:
      - ${REDIS_EXPOSE_PORT:-16379}:6379
    volumes:
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
      - ./docker/redis/server.crt:/etc/redis/server.crt
      - ./docker/redis/server.key:/etc/redis/server.key
      - redis-data:/data
    command: redis-server /chemin/vers/votre/fichier/redis.conf --appendonly yes --requirepass ${REDIS_PASSWORD}
    networks:
      - internal-network
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      interval: 10s
      timeout: 5s
      retries: 3
  
  postgres:
    container_name: postgres
    image: postgres:alpine
    restart: always
    env_file: ".env"
    environment:
      SSL_MODE: ${SSL_MODE:-no} # no, yes
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
      PGDATA: /var/lib/postgresql/data
    ports:
      - ${POSTGRES_EXPOSE_PORT:-15432}:5432
    volumes:
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres-data:/var/lib/postgresql/data
    networks:
      - internal-network

  api:
    container_name: api
    build:
      context: .
      target: api
      dockerfile: ./docker/api/Dockerfile
    restart: on-failure
    environment:
      SSL_MODE: ${SSL_MODE:-no} # no, yes
      GIN_MODE: ${GIN_MODE:-debug} # debug, release
      VAULT_ADDR: ${VAULT_ADDR:-http://vault:8200}
      VAULT_TOKEN: ${VAULT_TOKEN}
    depends_on:
      - postgres
    ports:
      - ${API_EXPOSE_PORT:-19000}:9000
    networks:
      - internal-network

  nginx: # Only used for local development
    container_name: nginx
    build:
      context: ./docker/nginx
      target: nginx
      dockerfile: ./Dockerfile
    restart: on-failure
    environment:
      SSL_MODE: ${SSL_MODE:-no} # no, yes
    depends_on:
      - api
    links:
      - api
    ports:
      - ${NGINX_EXPOSE_PORT:-80}:80
    networks:
      - internal-network

networks:
  internal-network:
    name: go-network
    driver: bridge

volumes:
  vault-data:
  redis-data:
  postgres-data:
