// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Prosper Abouar",
            "url": "https://www.github.com/4kpros",
            "email": "prosper.abouar@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/add-new-user-with-email": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Add new user - [super-admin]"
                ],
                "summary": "Add new user with email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter your email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "super-admin",
                            "admin",
                            "manager",
                            "manager-assist",
                            "deliver",
                            "customer",
                            "customer-service"
                        ],
                        "type": "string",
                        "description": "Select role",
                        "name": "role",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AddNewUserWithEmailResponse"
                        }
                    },
                    "302": {
                        "description": "User with this email already exists!",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid email or role!",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/add-new-user-with-phone": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Add new user - [super-admin]"
                ],
                "summary": "Add new user with phone number",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter your phone number",
                        "name": "email",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "super-admin",
                            "admin",
                            "manager",
                            "manager-assist",
                            "deliver",
                            "customer",
                            "customer-service"
                        ],
                        "type": "string",
                        "description": "Select role",
                        "name": "role",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AddNewUserWithEmailResponse"
                        }
                    },
                    "302": {
                        "description": "User with this phone number already exists!",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid phone number or role!",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/signin-email": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sign in"
                ],
                "summary": "Sign in user with email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter your email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    },
                    {
                        "minLength": 8,
                        "type": "string",
                        "description": "Must be at least 8 characters with 1 upper case, 1 lower case, 1 special character and 1 number",
                        "name": "password",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SignInResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid inputs!",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Account not activated!",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Invalid email or password!",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/signin-phone": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sign in"
                ],
                "summary": "Sign in user with phone number",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter your phone number",
                        "name": "phoneNumber",
                        "in": "path",
                        "required": true
                    },
                    {
                        "minLength": 8,
                        "type": "string",
                        "description": "Must be at least 8 characters with 1 upper case, 1 lower case, 1 special character and 1 number",
                        "name": "password",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SignInResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid inputs!",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Account not activated!",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Invalid phone number or password!",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/signin-provider": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sign in"
                ],
                "summary": "Sign in user with provider",
                "parameters": [
                    {
                        "enum": [
                            "google",
                            "facebook",
                            "instagram"
                        ],
                        "type": "string",
                        "description": "Enter your provider",
                        "name": "provider",
                        "in": "path",
                        "required": true
                    },
                    {
                        "minLength": 8,
                        "type": "string",
                        "description": "Enter your token",
                        "name": "token",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SignInResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid inputs!",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Invalid token!",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/signup-email": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sign up"
                ],
                "summary": "Sign up user with email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter your email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    },
                    {
                        "minLength": 8,
                        "type": "string",
                        "description": "Must be at least 8 characters with 1 upper case, 1 lower case, 1 special character and 1 number",
                        "name": "password",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SignUpResponse"
                        }
                    },
                    "302": {
                        "description": "User with this email already exists!",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/signup-phone": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sign up"
                ],
                "summary": "Sign up user with phone number",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter your phone number",
                        "name": "phoneNumber",
                        "in": "path",
                        "required": true
                    },
                    {
                        "minLength": 8,
                        "type": "string",
                        "description": "Must be at least 8 characters with 1 upper case, 1 lower case, 1 special character and 1 number",
                        "name": "password",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SignUpResponse"
                        }
                    },
                    "302": {
                        "description": "User with this phone number already exists!",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "response.AddNewUserWithEmailResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "response.SignInResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "expires": {
                    "type": "string"
                }
            }
        },
        "response.SignUpResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "SAGO - API Documentation",
	Description:      "This is the documentation of SAGO API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
