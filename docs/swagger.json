{
    "swagger": "2.0",
    "info": {
        "description": "This is the API documentation",
        "title": "API Documentation",
        "contact": {
            "name": "Prosper Abouar",
            "email": "prosper.abouar@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "paths": {
        "/auth/activate": {
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Activate account"
                ],
                "summary": "Activate new user account",
                "parameters": [
                    {
                        "description": "Enter your information",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_features_auth_data_request.ActivateAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_features_auth_data_response.ActivateAccountResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid token!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "User account is already activated!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/reset/code": {
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reset password"
                ],
                "summary": "Reset password set code",
                "parameters": [
                    {
                        "description": "Enter your information",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_features_auth_data_request.ResetPasswordCodeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_features_auth_data_response.ResetPasswordInitResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid token!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/reset/init-email": {
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reset password"
                ],
                "summary": "Reset password  with email init",
                "parameters": [
                    {
                        "description": "Enter your information",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_features_auth_data_request.ResetPasswordEmailInitRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_features_auth_data_response.ResetPasswordInitResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid email input!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User with email not found!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/reset/init-phone": {
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reset password"
                ],
                "summary": "Reset password with phone number init",
                "parameters": [
                    {
                        "description": "Enter your information",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_features_auth_data_request.ResetPasswordPhoneNumberInitRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_features_auth_data_response.ResetPasswordInitResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid phone number input!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User with phone number not found!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/reset/new-password": {
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reset password"
                ],
                "summary": "Reset password set new password",
                "parameters": [
                    {
                        "description": "Enter your information",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_features_auth_data_request.ResetPasswordNewPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_features_auth_data_response.ResetPasswordNewPasswordResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid token or password input!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/signin-email": {
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sign in"
                ],
                "summary": "Sign in user with email",
                "parameters": [
                    {
                        "description": "Enter your information",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_features_auth_data_request.SignInEmailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_features_auth_data_response.SignInResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid inputs!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Account not activated!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid email or password!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/signin-phone": {
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sign in"
                ],
                "summary": "Sign in user with phone number",
                "parameters": [
                    {
                        "description": "Enter your information",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_features_auth_data_request.SignInPhoneNumberRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_features_auth_data_response.SignInResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid inputs!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Account not activated!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid phone number or password!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/signin-provider": {
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sign in"
                ],
                "summary": "Sign in user with provider",
                "parameters": [
                    {
                        "description": "Enter your information",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_features_auth_data_request.SignInWithProviderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_features_auth_data_response.SignInResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid inputs!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid token!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/signup-email": {
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sign up"
                ],
                "summary": "Sign up user with email",
                "parameters": [
                    {
                        "description": "Enter your information",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_features_auth_data_request.SignUpEmailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_features_auth_data_response.SignUpResponse"
                        }
                    },
                    "302": {
                        "description": "User with this email already exists!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/signup-phone": {
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sign up"
                ],
                "summary": "Sign up user with phone number",
                "parameters": [
                    {
                        "description": "Enter your information",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_features_auth_data_request.SignUpPhoneNumberRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_features_auth_data_response.SignUpResponse"
                        }
                    },
                    "302": {
                        "description": "User with this phone number already exists!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/": {
            "get": {
                "security": [
                    {
                        "ApiKey \u0026\u0026 Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get all users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search keyword",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter order by",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort asc, desc",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.SuccessPaginatedResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid user session!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Not permitted!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/email": {
            "post": {
                "security": [
                    {
                        "ApiKey \u0026\u0026 Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create new user with email - [super-admin]",
                "parameters": [
                    {
                        "description": "Enter your information",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_features_user_data_request.CreateWithEmailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_features_user_data_response.CreateWithEmailResponse"
                        }
                    },
                    "302": {
                        "description": "User with this email already exists!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid email or role!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/info/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKey \u0026\u0026 Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update user info",
                "parameters": [
                    {
                        "description": "User info model",
                        "name": "payload",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_features_user_model.UserInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_features_user_model.UserInfo"
                        }
                    },
                    "400": {
                        "description": "Invalid inputs!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid user session!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Not permitted!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/phone": {
            "post": {
                "security": [
                    {
                        "ApiKey \u0026\u0026 Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create new user with phone number - [super-admin]",
                "parameters": [
                    {
                        "description": "Enter your information",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_features_user_data_request.CreateWithPhoneNumberRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_features_user_data_response.CreateWithPhoneNumberResponse"
                        }
                    },
                    "302": {
                        "description": "User with this phone number already exists!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid phone number or role!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKey \u0026\u0026 Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_features_user_model.User"
                        }
                    },
                    "400": {
                        "description": "Invalid inputs!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid user session!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Not permitted!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKey \u0026\u0026 Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "description": "Enter your information",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_features_user_model.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_features_user_model.User"
                        }
                    },
                    "400": {
                        "description": "Invalid inputs!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid user session!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Not permitted!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKey \u0026\u0026 Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update user info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid inputs!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid user session!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Not permitted!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found!",
                        "schema": {
                            "$ref": "#/definitions/github_com_4kpros_go-api_common_types.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_4kpros_go-api_common_types.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "github_com_4kpros_go-api_common_types.Filter": {
            "type": "object",
            "properties": {
                "orderBy": {
                    "type": "string"
                },
                "search": {
                    "type": "string"
                },
                "sort": {
                    "type": "string"
                }
            }
        },
        "github_com_4kpros_go-api_common_types.Pagination": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "currentPage": {
                    "type": "integer"
                },
                "limit": {
                    "type": "integer"
                },
                "nextPage": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "previousPage": {
                    "type": "integer"
                },
                "totalPages": {
                    "type": "integer"
                }
            }
        },
        "github_com_4kpros_go-api_common_types.SuccessPaginatedResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "filter": {
                    "$ref": "#/definitions/github_com_4kpros_go-api_common_types.Filter"
                },
                "pagination": {
                    "$ref": "#/definitions/github_com_4kpros_go-api_common_types.Pagination"
                }
            }
        },
        "github_com_4kpros_go-api_features_auth_data_request.ActivateAccountRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "github_com_4kpros_go-api_features_auth_data_request.ResetPasswordCodeRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "github_com_4kpros_go-api_features_auth_data_request.ResetPasswordEmailInitRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "github_com_4kpros_go-api_features_auth_data_request.ResetPasswordNewPasswordRequest": {
            "type": "object",
            "properties": {
                "newPassword": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "github_com_4kpros_go-api_features_auth_data_request.ResetPasswordPhoneNumberInitRequest": {
            "type": "object",
            "properties": {
                "phoneNumber": {
                    "type": "integer"
                }
            }
        },
        "github_com_4kpros_go-api_features_auth_data_request.SignInEmailRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "stayConnected": {
                    "type": "boolean"
                }
            }
        },
        "github_com_4kpros_go-api_features_auth_data_request.SignInPhoneNumberRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "integer"
                },
                "stayConnected": {
                    "type": "boolean"
                }
            }
        },
        "github_com_4kpros_go-api_features_auth_data_request.SignInWithProviderRequest": {
            "type": "object",
            "properties": {
                "provider": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "github_com_4kpros_go-api_features_auth_data_request.SignUpEmailRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "github_com_4kpros_go-api_features_auth_data_request.SignUpPhoneNumberRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "integer"
                }
            }
        },
        "github_com_4kpros_go-api_features_auth_data_response.ActivateAccountResponse": {
            "type": "object",
            "properties": {
                "activatedAt": {
                    "type": "string"
                }
            }
        },
        "github_com_4kpros_go-api_features_auth_data_response.ResetPasswordInitResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "github_com_4kpros_go-api_features_auth_data_response.ResetPasswordNewPasswordResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "github_com_4kpros_go-api_features_auth_data_response.SignInResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "expires": {
                    "type": "string"
                }
            }
        },
        "github_com_4kpros_go-api_features_auth_data_response.SignUpResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "github_com_4kpros_go-api_features_user_data_request.CreateWithEmailRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "github_com_4kpros_go-api_features_user_data_request.CreateWithPhoneNumberRequest": {
            "type": "object",
            "properties": {
                "phoneNumber": {
                    "type": "integer"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "github_com_4kpros_go-api_features_user_data_response.CreateWithEmailResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "github_com_4kpros_go-api_features_user_data_response.CreateWithPhoneNumberResponse": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "integer"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "github_com_4kpros_go-api_features_user_model.User": {
            "type": "object",
            "properties": {
                "_": {
                    "type": "integer"
                },
                "activatedAt": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isActivated": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "integer"
                },
                "provider": {
                    "type": "string"
                },
                "providerUserId": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userInfo": {
                    "$ref": "#/definitions/github_com_4kpros_go-api_features_user_model.UserInfo"
                }
            }
        },
        "github_com_4kpros_go-api_features_user_model.UserInfo": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            }
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Enter Bearer with space and your token",
            "type": "apiKey",
            "name": "Bearer",
            "in": "header"
        },
        "X-API-Key": {
            "description": "Enter the API key to have access",
            "type": "apiKey",
            "name": "ApiKey",
            "in": "header"
        }
    }
}