definitions:
  github_com_4kpros_go-api_features_auth_data_response.ActivateAccountResponse:
    properties:
      activatedAt:
        type: string
    type: object
  github_com_4kpros_go-api_features_auth_data_response.ResetPasswordInitResponse:
    properties:
      token:
        type: string
    type: object
  github_com_4kpros_go-api_features_auth_data_response.ResetPasswordNewPasswordResponse:
    properties:
      message:
        type: string
    type: object
  github_com_4kpros_go-api_features_auth_data_response.SignInResponse:
    properties:
      accessToken:
        type: string
      expires:
        type: string
    type: object
  github_com_4kpros_go-api_features_auth_data_response.SignUpResponse:
    properties:
      message:
        type: string
      token:
        type: string
    type: object
  github_com_4kpros_go-api_features_user_data_response.CreateWithEmailResponse:
    properties:
      email:
        type: string
      password:
        type: string
      role:
        type: string
    type: object
  github_com_4kpros_go-api_features_user_data_response.CreateWithPhoneNumberResponse:
    properties:
      password:
        type: string
      phoneNumber:
        type: integer
      role:
        type: string
    type: object
  github_com_4kpros_go-api_features_user_model.User:
    properties:
      _:
        type: integer
      activatedAt:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      id:
        type: integer
      isActivated:
        type: boolean
      password:
        type: string
      phoneNumber:
        type: integer
      provider:
        type: string
      providerUserId:
        type: string
      role:
        type: string
      updatedAt:
        type: string
      userInfo:
        $ref: '#/definitions/github_com_4kpros_go-api_features_user_model.UserInfo'
    type: object
  github_com_4kpros_go-api_features_user_model.UserInfo:
    properties:
      address:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      firstName:
        type: string
      id:
        type: integer
      image:
        type: string
      lastName:
        type: string
      updatedAt:
        type: string
      userName:
        type: string
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
info:
  contact:
    email: prosper.abouar@gmail.com
    name: Prosper Abouar
    url: https://www.github.com/4kpros
  description: This is the documentation of SAGO API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: SAGO - API Documentation
  version: "1.0"
paths:
  /auth/activate:
    post:
      consumes:
      - application/json
      parameters:
      - description: Enter your token from sign in or sign up
        in: body
        name: token
        required: true
        schema:
          type: string
      - description: Enter your received code
        in: body
        name: code
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_4kpros_go-api_features_auth_data_response.ActivateAccountResponse'
        "400":
          description: Invalid token!
          schema:
            type: string
        "403":
          description: User account is already activated!
          schema:
            type: string
        "404":
          description: User not found!
          schema:
            type: string
      summary: Activate new user account
      tags:
      - Activate account
  /auth/reset/code:
    post:
      consumes:
      - application/json
      parameters:
      - description: Enter your token
        in: body
        name: token
        required: true
        schema:
          type: string
      - description: Enter your received code
        in: body
        name: code
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_4kpros_go-api_features_auth_data_response.ResetPasswordInitResponse'
        "400":
          description: Invalid token!
          schema:
            type: string
        "404":
          description: User not found!
          schema:
            type: string
      summary: Reset password set code
      tags:
      - Reset password
  /auth/reset/init-email:
    post:
      consumes:
      - application/json
      parameters:
      - description: Enter your email
        in: body
        name: email
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_4kpros_go-api_features_auth_data_response.ResetPasswordInitResponse'
        "400":
          description: Invalid email input!
          schema:
            type: string
        "404":
          description: User with email not found!
          schema:
            type: string
      summary: Reset password  with email init
      tags:
      - Reset password
  /auth/reset/init-phone:
    post:
      consumes:
      - application/json
      parameters:
      - description: Enter your phone number
        in: body
        name: phoneNumber
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_4kpros_go-api_features_auth_data_response.ResetPasswordInitResponse'
        "400":
          description: Invalid phone number input!
          schema:
            type: string
        "404":
          description: User with phone number not found!
          schema:
            type: string
      summary: Reset password with phone number init
      tags:
      - Reset password
  /auth/reset/new-password:
    post:
      consumes:
      - application/json
      parameters:
      - description: Enter your token
        in: body
        name: token
        required: true
        schema:
          type: string
      - description: Enter your new password
        in: body
        name: newPassword
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_4kpros_go-api_features_auth_data_response.ResetPasswordNewPasswordResponse'
        "400":
          description: Invalid token or password input!
          schema:
            type: string
        "404":
          description: User not found!
          schema:
            type: string
      summary: Reset password set new password
      tags:
      - Reset password
  /auth/signin-email:
    post:
      consumes:
      - application/json
      parameters:
      - description: Enter your email
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: Must be at least 8 characters with 1 upper case, 1 lower case,
          1 special character and 1 number
        in: body
        minLength: 8
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_4kpros_go-api_features_auth_data_response.SignInResponse'
        "400":
          description: Invalid inputs!
          schema:
            type: string
        "403":
          description: Account not activated!
          schema:
            type: string
        "404":
          description: Invalid email or password!
          schema:
            type: string
      summary: Sign in user with email
      tags:
      - Sign in
  /auth/signin-phone:
    post:
      consumes:
      - application/json
      parameters:
      - description: Enter your phone number
        in: body
        name: phoneNumber
        required: true
        schema:
          type: integer
      - description: Must be at least 8 characters with 1 upper case, 1 lower case,
          1 special character and 1 number
        in: body
        minLength: 8
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_4kpros_go-api_features_auth_data_response.SignInResponse'
        "400":
          description: Invalid inputs!
          schema:
            type: string
        "403":
          description: Account not activated!
          schema:
            type: string
        "404":
          description: Invalid phone number or password!
          schema:
            type: string
      summary: Sign in user with phone number
      tags:
      - Sign in
  /auth/signin-provider:
    post:
      consumes:
      - application/json
      parameters:
      - description: Enter your provider
        in: body
        name: provider
        required: true
        schema:
          enum:
          - google
          - facebook
          - instagram
          type: string
      - description: Enter your token
        in: body
        minLength: 8
        name: token
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_4kpros_go-api_features_auth_data_response.SignInResponse'
        "400":
          description: Invalid inputs!
          schema:
            type: string
        "404":
          description: Invalid token!
          schema:
            type: string
      summary: Sign in user with provider
      tags:
      - Sign in
  /auth/signup-email:
    post:
      consumes:
      - application/json
      parameters:
      - description: Enter your email
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: Must be at least 8 characters with 1 upper case, 1 lower case,
          1 special character and 1 number
        in: body
        minLength: 8
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_4kpros_go-api_features_auth_data_response.SignUpResponse'
        "302":
          description: User with this email already exists!
          schema:
            type: string
      summary: Sign up user with email
      tags:
      - Sign up
  /auth/signup-phone:
    post:
      consumes:
      - application/json
      parameters:
      - description: Enter your phone number
        in: body
        name: phoneNumber
        required: true
        schema:
          type: integer
      - description: Must be at least 8 characters with 1 upper case, 1 lower case,
          1 special character and 1 number
        in: body
        minLength: 8
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_4kpros_go-api_features_auth_data_response.SignUpResponse'
        "302":
          description: User with this phone number already exists!
          schema:
            type: string
      summary: Sign up user with phone number
      tags:
      - Sign up
  /users/:
    get:
      consumes:
      - application/json
      parameters:
      - description: Search keyword
        in: query
        name: search
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Page limit
        in: query
        name: limit
        type: integer
      - description: Filter order by
        in: query
        name: orderBy
        type: string
      - description: Sort asc, desc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Invalid user session!
          schema:
            type: string
        "403":
          description: Not permitted!
          schema:
            type: string
      summary: Get all users
      tags:
      - Users
  /users/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Invalid inputs!
          schema:
            type: string
        "401":
          description: Invalid user session!
          schema:
            type: string
        "403":
          description: Not permitted!
          schema:
            type: string
        "404":
          description: User not found!
          schema:
            type: string
      summary: Update user info
      tags:
      - Users
    get:
      consumes:
      - application/json
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Invalid inputs!
          schema:
            type: string
        "401":
          description: Invalid user session!
          schema:
            type: string
        "403":
          description: Not permitted!
          schema:
            type: string
        "404":
          description: User not found!
          schema:
            type: string
      summary: Update user info
      tags:
      - Users
    put:
      consumes:
      - application/json
      parameters:
      - description: Enter your email
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: Enter your phone number
        in: body
        name: phoneNumber
        required: true
        schema:
          type: integer
      - description: Select role
        in: body
        name: role
        required: true
        schema:
          enum:
          - super-admin
          - admin
          - manager
          - manager-assist
          - deliver
          - customer
          - customer-service
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_4kpros_go-api_features_user_model.User'
        "400":
          description: Invalid inputs!
          schema:
            type: string
        "401":
          description: Invalid user session!
          schema:
            type: string
        "403":
          description: Not permitted!
          schema:
            type: string
        "404":
          description: User not found!
          schema:
            type: string
      summary: Update user
      tags:
      - Users
  /users/email:
    post:
      consumes:
      - application/json
      parameters:
      - description: Enter your email
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: Select role
        in: body
        name: role
        required: true
        schema:
          enum:
          - super-admin
          - admin
          - manager
          - manager-assist
          - deliver
          - customer
          - customer-service
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_4kpros_go-api_features_user_data_response.CreateWithEmailResponse'
        "302":
          description: User with this email already exists!
          schema:
            type: string
        "400":
          description: Invalid email or role!
          schema:
            type: string
      summary: Create new user with email - [super-admin]
      tags:
      - Users
  /users/info/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: User info model
        in: body
        name: payload
        schema:
          $ref: '#/definitions/github_com_4kpros_go-api_features_user_model.UserInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_4kpros_go-api_features_user_model.UserInfo'
        "400":
          description: Invalid inputs!
          schema:
            type: string
        "401":
          description: Invalid user session!
          schema:
            type: string
        "403":
          description: Not permitted!
          schema:
            type: string
        "404":
          description: User not found!
          schema:
            type: string
      summary: Update user info
      tags:
      - Users
  /users/phone:
    post:
      consumes:
      - application/json
      parameters:
      - description: Enter your phone number
        in: body
        name: phoneNumber
        required: true
        schema:
          type: integer
      - description: Select role
        in: body
        name: role
        required: true
        schema:
          enum:
          - super-admin
          - admin
          - manager
          - manager-assist
          - deliver
          - customer
          - customer-service
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_4kpros_go-api_features_user_data_response.CreateWithPhoneNumberResponse'
        "302":
          description: User with this phone number already exists!
          schema:
            type: string
        "400":
          description: Invalid phone number or role!
          schema:
            type: string
      summary: Create new user with phone number - [super-admin]
      tags:
      - Users
swagger: "2.0"
