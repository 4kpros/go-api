definitions:
  response.AddNewUserWithEmailResponse:
    properties:
      email:
        type: string
      password:
        type: string
      role:
        type: string
    type: object
  response.SignInResponse:
    properties:
      accessToken:
        type: string
      expires:
        type: string
    type: object
  response.SignUpResponse:
    properties:
      message:
        type: string
      token:
        type: string
    type: object
info:
  contact:
    email: prosper.abouar@gmail.com
    name: Prosper Abouar
    url: https://www.github.com/4kpros
  description: This is the documentation of SAGO API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: SAGO - API Documentation
  version: "1.0"
paths:
  /add-new-user-with-email:
    post:
      consumes:
      - application/json
      parameters:
      - description: Enter your email
        in: path
        name: email
        required: true
        type: string
      - description: Select role
        enum:
        - super-admin
        - admin
        - manager
        - manager-assist
        - deliver
        - customer
        - customer-service
        in: path
        name: role
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.AddNewUserWithEmailResponse'
        "302":
          description: User with this email already exists!
          schema:
            type: string
        "400":
          description: Invalid email or role!
          schema:
            type: string
      summary: Add new user with email
      tags:
      - Add new user - [super-admin]
  /add-new-user-with-phone:
    post:
      consumes:
      - application/json
      parameters:
      - description: Enter your phone number
        in: path
        name: email
        required: true
        type: string
      - description: Select role
        enum:
        - super-admin
        - admin
        - manager
        - manager-assist
        - deliver
        - customer
        - customer-service
        in: path
        name: role
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.AddNewUserWithEmailResponse'
        "302":
          description: User with this phone number already exists!
          schema:
            type: string
        "400":
          description: Invalid phone number or role!
          schema:
            type: string
      summary: Add new user with phone number
      tags:
      - Add new user - [super-admin]
  /signin-email:
    post:
      consumes:
      - application/json
      parameters:
      - description: Enter your email
        in: path
        name: email
        required: true
        type: string
      - description: Must be at least 8 characters with 1 upper case, 1 lower case,
          1 special character and 1 number
        in: path
        minLength: 8
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SignInResponse'
        "400":
          description: Invalid inputs!
          schema:
            type: string
        "403":
          description: Account not activated!
          schema:
            type: string
        "404":
          description: Invalid email or password!
          schema:
            type: string
      summary: Sign in user with email
      tags:
      - Sign in
  /signin-phone:
    post:
      consumes:
      - application/json
      parameters:
      - description: Enter your phone number
        in: path
        name: phoneNumber
        required: true
        type: string
      - description: Must be at least 8 characters with 1 upper case, 1 lower case,
          1 special character and 1 number
        in: path
        minLength: 8
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SignInResponse'
        "400":
          description: Invalid inputs!
          schema:
            type: string
        "403":
          description: Account not activated!
          schema:
            type: string
        "404":
          description: Invalid phone number or password!
          schema:
            type: string
      summary: Sign in user with phone number
      tags:
      - Sign in
  /signin-provider:
    post:
      consumes:
      - application/json
      parameters:
      - description: Enter your provider
        enum:
        - google
        - facebook
        - instagram
        in: path
        name: provider
        required: true
        type: string
      - description: Enter your token
        in: path
        minLength: 8
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SignInResponse'
        "400":
          description: Invalid inputs!
          schema:
            type: string
        "404":
          description: Invalid token!
          schema:
            type: string
      summary: Sign in user with provider
      tags:
      - Sign in
  /signup-email:
    post:
      consumes:
      - application/json
      parameters:
      - description: Enter your email
        in: path
        name: email
        required: true
        type: string
      - description: Must be at least 8 characters with 1 upper case, 1 lower case,
          1 special character and 1 number
        in: path
        minLength: 8
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SignUpResponse'
        "302":
          description: User with this email already exists!
          schema:
            type: string
      summary: Sign up user with email
      tags:
      - Sign up
  /signup-phone:
    post:
      consumes:
      - application/json
      parameters:
      - description: Enter your phone number
        in: path
        name: phoneNumber
        required: true
        type: string
      - description: Must be at least 8 characters with 1 upper case, 1 lower case,
          1 special character and 1 number
        in: path
        minLength: 8
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SignUpResponse'
        "302":
          description: User with this phone number already exists!
          schema:
            type: string
      summary: Sign up user with phone number
      tags:
      - Sign up
swagger: "2.0"
